name: MLflow Training CI

on:
  push:
    paths:
      - 'MLProject/**'
      - '.github/workflows/**'
  workflow_dispatch:

jobs:
  train-model:
    runs-on: ubuntu-latest

    env:
      MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
      MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
      DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
      MLFLOW_TRACKING_URI: https://dagshub.com/RiyZ411/msml-studi-kasus-heart.mlflow

    steps:
      - name: üîÅ Checkout Repository
        uses: actions/checkout@v4

      - name: üêç Set up Python 3.12.7
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.7'

      - name: üì¶ Install Conda Environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: heart-prediction-env
          environment-file: MLProject/conda.yaml
          auto-activate-base: false

      - name: ‚öôÔ∏è Activate Conda & Install Dependencies
        shell: bash -l {0}
        run: |
          conda activate heart-prediction-env
          pip install "mlflow[extras]==2.19.0"
          pip install dagshub==0.5.10

      - name: üöÄ Run modelling.py
        shell: bash -l {0}
        run: |
          conda activate heart-prediction-env
          export MLFLOW_TRACKING_URI=${{ env.MLFLOW_TRACKING_URI }}
          cd MLProject
          python modelling.py \
            --x_train_path heart_preprocessing/X_train.csv \
            --x_test_path heart_preprocessing/X_test.csv \
            --y_train_path heart_preprocessing/y_train.csv \
            --y_test_path heart_preprocessing/y_test.csv

      - name: üì§ Upload Artifacts to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: mlflow-artifacts
          path: |
            MLProject/conf_matrix.png
            MLProject/metric_info.json
            MLProject/classification_report.txt
            MLProject/run_id.txt

      - name: üíæ Baca RUN_ID dari file
        id: read_run_id
        run: |
          if [ ! -f MLProject/run_id.txt ]; then
            echo "run_id.txt tidak ditemukan!"
            exit 1
          fi
          RUN_ID=$(cat MLProject/run_id.txt)
          echo "RUN_ID=$RUN_ID" >> $GITHUB_OUTPUT

      - name: üê≥ Build Docker Image
        shell: bash -l {0}
        run: |
          conda activate heart-prediction-env
          export MLFLOW_TRACKING_URI=${{ env.MLFLOW_TRACKING_URI }}
          cd MLProject
          mlflow models build-docker -m runs:/${{ steps.read_run_id.outputs.RUN_ID }}/model -n heart-model-image

      - name: üîê Login to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin

      - name: üè∑Ô∏è Tag Docker Image
        run: docker tag heart-model-image ${{ secrets.DOCKER_USERNAME }}/heart-model-image:latest

      - name: üöö Push Docker Image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/heart-model-image:latest